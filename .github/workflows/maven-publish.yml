#
# Copyright 2016-present the IoT DC3 original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Maven Deploy & Release

on:
  push:
    tags:
      - "dc3.release.*"

jobs:
  maven-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Decrypt GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode > private-key.asc
          gpg --batch --import private-key.asc

      - name: Build and deploy
        run: mvn --settings .github/maven-settings.xml clean deploy -P deploy
        env:
          SERVER_ID: ${{ secrets.SERVER_ID }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/dc3.release.}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Generate release notes
        id: release_notes
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGES=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD | head -20)
          else
            CHANGES=$(git log --pretty=format:"- %s" --reverse | head -20)
          fi
          
          # 创建release notes
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "## DC3 Release ${{ steps.extract_version.outputs.version }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### What's Changed" >> $GITHUB_OUTPUT
          echo "$CHANGES" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Download" >> $GITHUB_OUTPUT
          echo "- [Maven Central Repository](https://search.maven.org/artifact/io.github.pnoker/dc3-parent/${{ steps.extract_version.outputs.version }}/pom)" >> $GITHUB_OUTPUT
          echo "- [GitHub Release](https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }})" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Documentation" >> $GITHUB_OUTPUT
          echo "- [Project Documentation](https://github.com/pnoker/iot-dc3)" >> $GITHUB_OUTPUT
          echo "- [Release Notes](https://github.com/${{ github.repository }}/releases)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: DC3 Release ${{ steps.extract_version.outputs.version }}
          body: ${{ steps.release_notes.outputs.release_notes }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
